#BlueJ class context
comment0.target=Card1
comment0.text=\r\n\ Sets\ the\ pieces\ for\ the\ board\ if\ beginner\ difficulty\ is\ picked\r\n\r\n\ @author\ Brianna\ Davis,\ Zach\ Giannuzzi,\ Abdul\ Samad,\ Eric\ Sauer,\r\n\ Daniel\ Senecal\r\n\ @version\ 4/30/2018\r\n
comment1.params=
comment1.target=Card1()
comment1.text=\r\n\ Constructs\ an\ object\ for\ Card1\ and\ sets\ the\ positions\ in\r\n\ the\ arrays\ to\ what\ type\ of\ piece\ is\ located\ where\r\n\ \r\n
comment10.params=piece
comment10.target=int\ getRow(int)
comment10.text=\r\n\ \ Gets\ the\ row\ of\ a\ piece\ on\ the\ board.\r\n\ \ \r\n\ \ @param\ Piece\ is\ the\ type\ of\ piece\ to\ get\ the\ row\ of.\r\n\ \ @return\ The\ row\ that\ the\ piece\ is\ in\r\n
comment11.params=piece
comment11.target=int\ getCol(int)
comment11.text=\r\n\ \ Gets\ the\ column\ of\ a\ piece\ on\ the\ board.\r\n\ \ \r\n\ \ @param\ Piece\ is\ the\ type\ of\ piece\ to\ get\ the\ row\ of.\r\n\ \ @return\ The\ column\ that\ the\ piece\ is\ in\r\n
comment12.params=piece
comment12.target=int\ getPos(int)
comment12.text=\r\n\ \ Gets\ the\ direction\ of\ a\ piece\ on\ the\ board.\r\n\ \ \r\n\ \ @param\ Piece\ is\ the\ type\ of\ piece\ to\ get\ the\ direction\ of.\r\n\ \ @return\ The\ direction\ that\ the\ piece\ is\ facing\r\n
comment13.params=piece
comment13.target=boolean\ alreadyHas(int)
comment13.text=\r\n\ \ Determines\ is\ the\ board\ already\ has\ that\ type\ of\ piece.\r\n\ \ \r\n\ \ @param\ Piece\ is\ the\ type\ of\ piece\ to\ check\ for.\r\n\ \ @return\ True\ if\ the\ board\ already\ has\ that\ piece.\r\n
comment14.params=piece
comment14.target=void\ remove(int)
comment14.text=\r\n\ Removes\ a\ piece\ from\ the\ board\r\n\ \r\n\ @param\ Piece\ is\ the\ type\ of\ piece\ to\ remove\ from\ the\ board\r\n\ @return\ Nothing\r\n
comment2.params=
comment2.target=int[][]\ getBoard()
comment2.text=\r\n\ Allows\ access\ to\ the\ board\ variable\r\n\ \r\n\ @return\ Returns\ the\ int\ matrix\ board\r\n
comment3.params=
comment3.target=int[][]\ getPositions()
comment3.text=\r\n\ Allows\ access\ to\ the\ positions\ variable\r\n\ \r\n\ @return\ Returns\ the\ int\ matrix\ positions\r\n
comment4.params=
comment4.target=boolean[][]\ target()
comment4.text=\r\n\ Allows\ access\ to\ the\ target\ variable\r\n\ \r\n\ @return\ Returns\ the\ int\ matrix\ target\r\n
comment5.params=piece\ row\ col
comment5.target=void\ setBoard(int,\ int,\ int)
comment5.text=\r\n\ Allows\ mutations\ to\ be\ made\ to\ the\ board\ variable\r\n\ \r\n\ @param\ piece\ determines\ what\ type\ of\ piece\ will\ be\ set\r\n\ @param\ row\ the\ row\ on\ board\ that\ will\ be\ set\r\n\ @param\ col\ the\ column\ on\ the\ board\ that\ will\ be\ set\ \r\n
comment6.params=pos\ row\ col
comment6.target=void\ setPositions(int,\ int,\ int)
comment6.text=\r\n\ Allows\ mutations\ to\ be\ made\ to\ the\ positions\ variable\r\n\ \r\n\ @param\ pos\ determines\ what\ direction\ the\ piece\ will\ be\ set\ to\r\n\ @param\ row\ the\ row\ on\ board\ that\ will\ be\ set\r\n\ @param\ col\ the\ column\ on\ the\ board\ that\ will\ be\ set\ \r\n
comment7.params=t\ row\ col
comment7.target=void\ setTargets(boolean,\ int,\ int)
comment7.text=\r\n\ Allows\ mutations\ to\ be\ made\ to\ the\ target\ variable\r\n\ \r\n\ @param\ pos\ determines\ where\ the\ target\ piece\ will\ be\ set\ to\r\n\ @param\ row\ the\ row\ on\ board\ that\ will\ be\ set\r\n\ @param\ col\ the\ column\ on\ the\ board\ that\ will\ be\ set\ \r\n
comment8.params=
comment8.target=void\ reset()
comment8.text=\r\n\ Resets\ the\ board\ to\ the\ default\ positions\r\n
comment9.params=
comment9.target=boolean\ solvedGame()
comment9.text=\r\n\ Determines\ if\ the\ game\ has\ been\ solved\ or\ not\r\n\ \r\n\ @return\ True\ if\ the\ positions\ of\ the\ pieces\ are\ correct\ and\r\n\ the\ board\ has\ been\ solved.\ Otherwise\ it\ returns\ false\r\n
numComments=15
